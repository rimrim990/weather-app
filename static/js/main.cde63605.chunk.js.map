{"version":3,"sources":["components/Detail.tsx","components/Weather.tsx","components/Search.tsx","App.tsx","index.tsx"],"names":["Detail","list","day","className","map","item","dt_txt","split","weather","main","description","alt","src","icon","temp_min","temp","temp_max","Weather","state","isLoading","getData","city","a","axios","get","data","setState","this","props","isClicked","dayList","weatherList","Array","fill","length","forEach","pos","indexOf","push","toUpperCase","substring","index","React","Component","Search","handleClick","handleChange","e","target","value","type","onChange","onClick","App","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.cde63605.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface AppProps {\r\n  list: Array<Record<string, any>>;\r\n  day: string;\r\n}\r\n\r\nfunction Detail({ list, day }: AppProps): JSX.Element {\r\n  return (\r\n    <div className=\"content\">\r\n      <h1>{day}</h1>\r\n      {list.map((item) => {\r\n        return (\r\n          <ul className={day} key={day}>\r\n            <h3>{item.dt_txt.split(' ')[1]}</h3>\r\n            <div className=\"weather list\">\r\n              <li className=\"name\">\r\n                <span>{item.weather[0].main}</span>\r\n              </li>\r\n              <li className=\"desc\">\r\n                <p>{item.weather[0].description}</p>\r\n              </li>\r\n              <li className=\"icon\">\r\n                <img\r\n                  alt={item.weather[0].main}\r\n                  src={`https://openweathermap.org/img/w/${item.weather[0].icon}.png`}\r\n                />\r\n              </li>\r\n            </div>\r\n            <div className=\"temp list\">\r\n              <li>\r\n                <span>low</span>\r\n                <br />\r\n                <span>{item.main.temp_min}</span>\r\n              </li>\r\n              <li>\r\n                <span>temp</span>\r\n                <br />\r\n                <span>{item.main.temp}</span>\r\n              </li>\r\n              <li>\r\n                <span>high</span>\r\n                <br />\r\n                <span>{item.main.temp_max}</span>\r\n              </li>\r\n            </div>\r\n          </ul>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable react/state-in-constructor */\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport './Weather.css';\r\nimport Detail from './Detail';\r\n\r\ninterface MyProps {\r\n  city: string;\r\n  isClicked: boolean;\r\n}\r\ninterface MyState {\r\n  isLoading: boolean;\r\n  list: Array<Record<string, any>>;\r\n}\r\n\r\nclass Weather extends React.Component<MyProps, MyState> {\r\n  state: MyState = {\r\n    isLoading: true,\r\n    list: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { city } = this.props;\r\n    this.getData(city);\r\n  }\r\n\r\n  getData = async (city: string) => {\r\n    try {\r\n      const {\r\n        data: { list },\r\n      } = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?units=metric&q=${city}&appid=5f2259e851f23e2fc4a48a9deb127b54`,\r\n      );\r\n      this.setState({ list, isLoading: false });\r\n    } catch {\r\n      this.setState({\r\n        list: [],\r\n        isLoading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { city, isClicked } = this.props;\r\n    const { isLoading, list } = this.state;\r\n    const dayList: string[] = [];\r\n    const weatherList: any[][] = Array(6)\r\n      .fill(null)\r\n      .map(() => []);\r\n\r\n    if (!isLoading || isClicked || list.length) {\r\n      list.forEach((data) => {\r\n        const [day] = data.dt_txt.split(' ');\r\n        const pos: number = dayList.indexOf(day);\r\n        if (pos === -1) {\r\n          dayList.push(day);\r\n          weatherList[dayList.length - 1].push(data);\r\n        } else {\r\n          weatherList[pos].push(data);\r\n        }\r\n      });\r\n    }\r\n\r\n    return isLoading || !isClicked || !list.length ? (\r\n      <div className=\"content load\">Loading...</div>\r\n    ) : (\r\n      <div>\r\n        <h1>{city[0].toUpperCase() + city.substring(1)}</h1>\r\n        {weatherList.map((item, index) => {\r\n          return (\r\n            <Detail key={dayList[index]} list={item} day={dayList[index]} />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","/* eslint-disable react/state-in-constructor */\r\nimport React from 'react';\r\nimport Weather from './Weather';\r\nimport './Search.css';\r\n\r\ninterface MyState {\r\n  city: string;\r\n  isClicked: boolean;\r\n}\r\n\r\nclass Search extends React.Component<unknown, MyState> {\r\n  state: MyState = { city: '', isClicked: false };\r\n\r\n  handleClick = () => {\r\n    this.setState({ isClicked: true });\r\n  };\r\n\r\n  handleChange = (e: any) => {\r\n    this.setState({ city: e.target.value, isClicked: false });\r\n  };\r\n\r\n  render() {\r\n    const { city, isClicked } = this.state;\r\n    return (\r\n      <section className=\"weather-forecast\">\r\n        <div className=\"search\">\r\n          <input\r\n            className=\"search-input\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            value={city}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            className=\"search-button\"\r\n            onClick={this.handleClick}\r\n            value=\"Go\"\r\n          />\r\n        </div>\r\n        {isClicked ? (\r\n          <Weather city={city} isClicked={isClicked} />\r\n        ) : (\r\n          <div className=\"content\">typing...</div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Search from './components/Search';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"main\">\r\n      <h1>5 Day Weather Forecast</h1>\r\n      <Search />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}